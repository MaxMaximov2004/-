https://metanit.com/cpp/tutorial/5.10.php
В C++ как известно конструкторы не наследуются и нужно после определения конструктора писать : и пропичвать конструктор базового класса (что-бы он иницализировал свои поля(т.к. Private виден только самому объекту и друзьям)), но если в наследуемом классе нет полей которые надо инициализировать можно  использовать только конструктор родительского класса (подключается через using p.s так можно подключать и прочие методы (что-бы их было видно извне если мы наследуем с модификатором protected или private))

КОД:
#include <iostream>

class A {
protected:
	int _a;
	int _b;
public:
	A(int a, int b) {
		_a = a;
		_b = b;
	}

	int ret() {
		return(_a + _b);
	}
};

class B :private A {
public:
	using A::A;
	using A::ret;

	/*B(int a, int b):A(a,b) {
	
	}*/
};

int main() {
	B test(5, 12);
	std::cout<<test.ret();
}